apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-scanner-production
  namespace: production
  labels:
    app: jenkins-scanner
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: jenkins-scanner
      environment: production
  template:
    metadata:
      labels:
        app: jenkins-scanner
        environment: production
    spec:
      containers:
      - name: jenkins-scanner
        image: registry.gitlab.com/your-group/jenkins-scanner:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_TELEMETRY_DISABLED
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - jenkins-scanner
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-scanner-production-service
  namespace: production
spec:
  selector:
    app: jenkins-scanner
    environment: production
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-scanner-production-ingress
  namespace: production
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - jenkins-scanner.example.com
    secretName: jenkins-scanner-production-tls
  rules:
  - host: jenkins-scanner.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jenkins-scanner-production-service
            port:
              number: 80